{"version":3,"sources":["components/AddSongForm.js","components/SongList.js","components/SongDetail.js","components/SongUpdate.js","components/SongDelete.js","components/Welcome.js","App.js","index.js"],"names":["AddSongForm","setSongAdded","songAdded","setHideForm","setAddSong","useState","song_name","artist_name","genre","year_of_release","duration_of_song","info","setInfo","errorMessage","setErrorMessage","isError","setIsError","handleChange","event","value","target","name","handleSubmit","preventDefault","isNaN","parseInt","axios","post","result","song","data","id","then","res","username","rating","catch","err","delete","console","log","response","className","onSubmit","type","placeholder","onChange","Songlist","setRightColumn","setSongID","rightColumn","list","setList","songList","setSongList","searchTerm","setSearchTerm","sortValue","setSortValue","useEffect","get","getSong","song_object_id","filter","toLowerCase","includes","sort","a","b","localeCompare","map","onClick","e","song_id","SongDetail","songID","songObject","setSongObject","detailObject","setDetailObject","ratingObjectID","setRatingObjectID","setRating","detailObjectList","ratingObjectList","ratingObject","checked","input_rating","put","htmlFor","SongUpdate","result0","detail","val","detailID","updatedSong","emptyField","undefined","SongDelete","Welcome","App","addSong","hideForm","SongList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02b2baa4.chunk.js","sourcesContent":["import React, { useState} from 'react'\r\nimport axios from \"axios\";\r\n\r\nfunction AddSongForm({setSongAdded , songAdded, setHideForm, setAddSong}) {\r\n    const [info, setInfo] = useState({\r\n        song_name : \"\",\r\n        artist_name : \"\",\r\n        genre : \"\",\r\n        year_of_release : \"\",\r\n        duration_of_song : \"\"\r\n    });\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    const handleChange = event => {\r\n        const value = event.target.value;\r\n        setInfo({\r\n            ...info,\r\n            [event.target.name] : value\r\n        });\r\n    }\r\n    \r\n    \r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (info.year_of_release < 1860 || info.year_of_release > 2030){\r\n                setIsError(true);\r\n                setErrorMessage(\"Please enter a valid year\");\r\n            }\r\n            else {\r\n\r\n                let isDurationValid = (!isNaN(info.duration_of_song[0]) && !isNaN(info.duration_of_song[1]) \r\n                    && !isNaN(info.duration_of_song[3]) && !isNaN(info.duration_of_song[4]) \r\n                    && (info.duration_of_song[2] === \":\") && parseInt(info.duration_of_song[3]) < 6 \r\n                   )\r\n\r\n                if (!isDurationValid) {\r\n                    setIsError(true);\r\n                    setErrorMessage(\"Please enter a valid duration using the required formatting: 00:00\");\r\n                }\r\n                else {\r\n                    let result = await axios.post(\"https://musicapp-y9w8.onrender.com/api/songs/\", \r\n                                                {song_name : info.song_name, artist_name : info.artist_name});                                        \r\n\r\n                    axios.post(\"https://musicapp-y9w8.onrender.com/api/details/\", {song : result.data.id, genre : info.genre, \r\n                            year_of_release : info.year_of_release, duration_of_song : info.duration_of_song})\r\n                        .then(res => {\r\n                            setIsError(false);\r\n                            setSongAdded(!songAdded);\r\n                            setHideForm(true);\r\n                            setAddSong(false);\r\n                            axios.post(\"https://musicapp-y9w8.onrender.com/api/ratings/\", { username : 1, song : result.data.id, rating: 0 })\r\n                        })       \r\n                        .catch(err =>{\r\n                            axios.delete(`https://musicapp-y9w8.onrender.com/api/songs/${result.data.id}/`);\r\n                            setIsError(true);\r\n                            setErrorMessage(\"Please fill in all the fields with valid information!\");\r\n                    }); \r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.log(err.response.data);\r\n            if(err.response.data.song_name){\r\n                if(err.response.data.song_name[0] == \"song with this song name already exists.\") {\r\n                    setIsError(true);\r\n                    setErrorMessage(\"You can already enjoy information about this song in our website! It is already in our database!\");\r\n                } else {\r\n                    setIsError(true);\r\n                    setErrorMessage(\"Please fill in all the fields with valid information!\");\r\n                }\r\n            } else {\r\n                setIsError(true);\r\n                setErrorMessage(\"Please fill in all the fields with valid information!\");\r\n            }\r\n            \r\n        };       \r\n        }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form className = 'song-form' onSubmit = {handleSubmit}>\r\n                <input\r\n                    type = \"text\" \r\n                    placeholder = \"Song Name\" \r\n                    value = {info.song_name} \r\n                    name = \"song_name\" \r\n                    className = \"song-input\"\r\n                    onChange = {handleChange}>\r\n                </input>\r\n                <input\r\n                    type = \"text\" \r\n                    placeholder = \"Artist Name\" \r\n                    value = {info.artist_name} \r\n                    name = \"artist_name\" \r\n                    className = \"song-input\"\r\n                    onChange = {handleChange}>\r\n                </input>\r\n                <input\r\n                    type = \"text\" \r\n                    placeholder = \"Short Description\" \r\n                    value = {info.genre} \r\n                    name = \"genre\" \r\n                    className = \"song-input\"\r\n                    onChange = {handleChange}>\r\n                </input>\r\n                <input\r\n                    type = \"number\" \r\n                    placeholder = \"Year of Release\" \r\n                    value = {info.year_of_release} \r\n                    name = \"year_of_release\" \r\n                    className = \"song-input\"\r\n                    onChange = {handleChange}>\r\n                </input>\r\n                <input\r\n                    type = \"text\" \r\n                    placeholder = \"Duration in Format: 00:00\" \r\n                    value = {info.duration_of_song} \r\n                    name = \"duration_of_song\" \r\n                    className = \"song-input\"\r\n                    onChange = {handleChange}>\r\n                </input>\r\n                \r\n                <button className = \"song-button\">Add Song</button>\r\n            </form>\r\n            <p className = \"error-msg\">{isError ? errorMessage : null}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddSongForm\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\n\r\nfunction Songlist({songAdded, setRightColumn, setSongID, rightColumn}) {\r\n    const [list,setList] = useState([]); // List of Detail Objects\r\n    const [songList,setSongList] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [sortValue, setSortValue] = useState('');\r\n\r\n    const handleSelectChange = event => {\r\n        const value = event.target.value;\r\n        setSortValue(value);\r\n    }   \r\n  \r\n    useEffect(() => {\r\n      axios.get(\"https://musicapp-y9w8.onrender.com/api/details/\") \r\n        .then(res => {\r\n            setList(res.data);\r\n        })\r\n        .catch(err =>console.log(err)); \r\n    },[songAdded,rightColumn]);\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://musicapp-y9w8.onrender.com/api/songs/\")\r\n            .then(res => {\r\n                setSongList(res.data);\r\n            })\r\n            .catch(err => console.log(\"no\"));\r\n    }, [songAdded,rightColumn]);\r\n\r\n    const getSong = (song_object_id) => {\r\n        return songList.filter(value => value.id == song_object_id)[0];\r\n    }\r\n\r\n    \r\n    \r\n\r\n    const handleClickDetails = (song_id) => {\r\n        setRightColumn(\"song_details\");\r\n        setSongID(song_id);\r\n    }\r\n\r\n    const handleClickUpdate = (song_id) => {\r\n        setRightColumn(\"song_update\");\r\n        setSongID(song_id);\r\n    }\r\n\r\n    const handleClickDelete = (song_id) => {\r\n        setRightColumn(\"song_delete\");\r\n        setSongID(song_id);\r\n    }\r\n\r\n    const handleChangeSearch = event => {\r\n        setSearchTerm(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = \"container\">\r\n            <input type = \"text\" className = \"search-bar\" placeholder = \"Search by Song Name or Artist Name\" onChange = {handleChangeSearch} />\r\n            <p className = \"sort-by\">Sort By:</p>\r\n            <select className = \"sort-by-select\" onChange = {handleSelectChange}>\r\n                <option value = \"none\">None</option>\r\n                <option value = \"song_name\">Song Name</option>\r\n                <option value = \"rating\">Rating</option>\r\n                <option value = \"year_of_release\">Year of Release</option>\r\n            </select>\r\n            <ul className = \"list-container\">\r\n                {list.filter(value => {\r\n                if (searchTerm == \"\") {\r\n                    return getSong(value.song)\r\n                } else if (getSong(value.song).song_name.toLowerCase().includes(searchTerm.toLowerCase()) || getSong(value.song).artist_name.toLowerCase().includes(searchTerm.toLowerCase())) {\r\n                    return value\r\n                }\r\n                }).sort((a, b) => {\r\n                    if (sortValue == \"song_name\") {\r\n                        //console.log(a.song.song_name);\r\n                        return getSong(a.song).song_name.localeCompare(getSong(b.song).song_name);\r\n                    } \r\n                    else if (sortValue == \"rating\") {\r\n                        return a.rating - b.rating \r\n                    } else if (sortValue == \"year_of_release\") {\r\n                        return a.year_of_release - b.year_of_release\r\n                    } \r\n                }).map(value => \r\n                    <li className = \"song-list\" key={value.song}>\r\n                        <button className = \"song-name-button\" onClick = {(e) => handleClickDetails(value.song, e)}>{getSong(value.song).song_name}</button>\r\n                        <p className = \"song-para\">{getSong(value.song).artist_name}</p>\r\n                        <div className = \"align-right\">\r\n                            <button className = \"song-update-button\" onClick = {(e) => handleClickUpdate(value.song, e)}>Update</button> \r\n                            <button className = \"song-delete-button\" onClick = {(e) => handleClickDelete(value.song, e)}>Delete</button>\r\n                        </div> \r\n                    </li>)}\r\n            </ul>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Songlist\r\n","import React, {useState, useEffect, useDebugValue} from 'react';\r\nimport axios from \"axios\";\r\n\r\nfunction SongDetail({ songID }) {\r\n    const [songObject,setSongObject] = useState({});\r\n    const [detailObject,setDetailObject] = useState({});\r\n    const [ratingObjectID,setRatingObjectID] = useState(0);\r\n    const [rating,setRating] = useState(0);\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [isError, setIsError] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://musicapp-y9w8.onrender.com/api/songs/${songID}/`)\r\n            .then(res => setSongObject(res.data))\r\n            .catch(err => console.log(err.response));\r\n    },[songID])\r\n\r\n    useEffect(async () => {\r\n        let res = await axios.get(\"https://musicapp-y9w8.onrender.com/api/details/\");\r\n        let detailObjectList = res.data;\r\n        setDetailObject(detailObjectList.filter(value => value.song == songID)[0]);\r\n    },[songID])\r\n\r\n    useEffect(async () => {\r\n        let res = await axios.get(\"https://musicapp-y9w8.onrender.com/api/ratings/\");\r\n        let ratingObjectList = res.data;\r\n        let ratingObject = ratingObjectList.filter(value => value.song == songID)[0];\r\n        setRatingObjectID(ratingObject.id);\r\n        setRating(ratingObject.rating);\r\n    },[songID])\r\n\r\n/*\r\n    const handleChange = event => {\r\n        const value = event.target.value;\r\n        setSongRating({\r\n            ...songRating,\r\n            [event.target.rating] : value\r\n        });\r\n    }\r\n*/\r\n\r\nconst handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        let input_rating;\r\n        if (event.target[0].checked) {\r\n            input_rating = 1;\r\n            setIsError(false);\r\n        }\r\n        else if (event.target[1].checked) {\r\n            input_rating = 2;\r\n            setIsError(false);\r\n        }\r\n        else if (event.target[2].checked) {\r\n            input_rating = 3;\r\n            setIsError(false);\r\n        }\r\n        else if (event.target[3].checked) {\r\n            input_rating = 4;\r\n            setIsError(false);\r\n        }\r\n        else if (event.target[4].checked) {\r\n            input_rating = 5;\r\n            setIsError(false);\r\n        }\r\n        else {\r\n            setIsError(true);\r\n            setErrorMessage(\"Please choose a rating!\")\r\n        }\r\n\r\n\r\n        if (!isError) {  \r\n            axios.put(`https://musicapp-y9w8.onrender.com/api/ratings/${ratingObjectID}/`, {rating : input_rating, song : songID, username : 1})\r\n                .then(res => {\r\n                    if (input_rating){\r\n                        setRating(input_rating);\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err.response);\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h1 className = \"details-header\">Song Details</h1>\r\n            <ul className = \"details-list\">\r\n                <li>Song Name: {songObject.song_name}</li>\r\n                <li>Artist Name: {songObject.artist_name}</li>\r\n                <li>Short Description: {detailObject.genre}</li>\r\n                <li>Year of Release: {detailObject.year_of_release}</li>\r\n                <li>Duration of Song: {detailObject.duration_of_song}</li>\r\n                {rating === 0 ? <li>Last Rating: None</li> : <li>Last Rating: {rating}</li>}\r\n            </ul>\r\n            <form className = 'welcome-msg' onSubmit = {handleSubmit}>\r\n                <input type=\"radio\" className=\"rating-input\" name=\"rating\" value={1} ></input>\r\n                <label htmlFor=\"1\">1</label>\r\n                <input type=\"radio\" className=\"rating-input\" name=\"rating\" value={2} ></input>\r\n                <label htmlFor=\"2\">2</label>\r\n                <input type=\"radio\" className=\"rating-input\" name=\"rating\" value={3} ></input>\r\n                <label htmlFor=\"3\">3</label>\r\n                <input type=\"radio\" className=\"rating-input\" name=\"rating\" value={4} ></input>\r\n                <label htmlFor=\"4\">4</label>\r\n                <input type=\"radio\" className=\"rating-input\" name=\"rating\" value={5} ></input>\r\n                <label htmlFor=\"5\">5</label>\r\n                <button className = \"song-button\">Rate!</button>\r\n            </form>\r\n            <p className = \"error-msg\">{isError ? errorMessage : null}</p>\r\n        </div>\r\n        )\r\n}\r\n\r\n\r\nexport default SongDetail\r\n","import React, {useState, useEffect} from 'react';\r\nimport axios from \"axios\";\r\n\r\nfunction SongUpdate({ songID, setRightColumn }) {\r\n    const [info, setInfo] = useState({\r\n        song_name : \"\",\r\n        artist_name : \"\",\r\n        genre : \"\",\r\n        year_of_release : \"\",\r\n        duration_of_song : \"\"\r\n    });\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [isError, setIsError] = useState(false);\r\n    const [songList,setSongList] = useState([]);\r\n\r\n    const handleChange = event => {\r\n        const value = event.target.value;\r\n        setInfo({\r\n            ...info,\r\n            [event.target.name] : value\r\n        });\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(\"https://musicapp-y9w8.onrender.com/api/songs/\")\r\n            .then(res => {\r\n                setSongList(res.data);\r\n            })\r\n            .catch(err => console.log(\"no\"));\r\n    },[songID]);\r\n    \r\n    const getSong = (song_object_id) => {\r\n        return songList.filter(value => value.id == song_object_id)[0];\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();     \r\n        try {\r\n            let result0 = await axios.get(\"https://musicapp-y9w8.onrender.com/api/details/\");\r\n            let detail = result0.data.filter(val => getSong(val.song).id == songID)[0];\r\n            let detailID = detail.id;\r\n            let emptyField = () => {\r\n                if (info.song_name == \"\" && info.artist_name == \"\") {\r\n                    return {\r\n                        song_name : getSong(songID).song_name,\r\n                        artist_name : getSong(songID).artist_name,\r\n                    //    genre : info.genre,\r\n                    //    year_of_release : info.year_of_release,\r\n                    //    duration_of_song : info.duration_of_song\r\n                    }\r\n                } else if (info.song_name == \"\") {\r\n                    return {\r\n                        song_name : getSong(songID).song_name,\r\n                        artist_name : info.artist_name,\r\n                    //    genre : info.genre,\r\n                    //    year_of_release : info.year_of_release,\r\n                    //    duration_of_song : info.duration_of_song\r\n                    }\r\n                } else if (info.artist_name == \"\") {\r\n                    return {\r\n                        song_name : info.song_name,\r\n                        artist_name : getSong(songID).artist_name,\r\n                    //    genre : info.genre,\r\n                    //    year_of_release : info.year_of_release,\r\n                    //    duration_of_song : info.duration_of_song\r\n                    }\r\n                } else {\r\n                    return {\r\n                        song_name : info.song_name,\r\n                        artist_name : info.artist_name\r\n                    }\r\n                }\r\n            }\r\n            \r\n            let updatedSong = emptyField();\r\n            //console.log(updatedSong);\r\n\r\n\r\n            let result = await axios.put(`https://musicapp-y9w8.onrender.com/api/songs/${songID}/`, \r\n                                        updatedSong);\r\n            axios.put(`https://musicapp-y9w8.onrender.com/api/details/${detailID}/`, {song : result.data.id, genre : info.genre || detail.genre, \r\n                    year_of_release : info.year_of_release || detail.year_of_release, \r\n                    duration_of_song : info.duration_of_song || detail.duration_of_song})\r\n                .then(res => {\r\n                    setIsError(false);\r\n                    setRightColumn(\"Welcome!\");\r\n                })       \r\n                .catch(err =>{\r\n                    console.log(err.response);\r\n                    setIsError(false);\r\n                    setRightColumn(\"Welcome!\");\r\n            });    \r\n        } catch (err) {\r\n            console.log(err.response.data);\r\n            if(err.response.data.song_name){\r\n                if(err.response.data.song_name[0] == \"song with this song name already exists.\") {\r\n                    setIsError(true);\r\n                    setErrorMessage(\"You can already enjoy information about this song in our website!\");\r\n                } else {\r\n                    setIsError(true);\r\n                    setErrorMessage(\"Please fill in all the fields!\");\r\n                }\r\n            } else {\r\n                setIsError(true);\r\n                setErrorMessage(\"Please fill in all the fields!\");\r\n            }\r\n        };  \r\n        }\r\n\r\n    return (\r\n        <div>\r\n            <p className = \"welcome-msg\">If you leave a field empty, its value will stay the same.</p>\r\n            <form className = 'song-form' onSubmit = {handleSubmit}>\r\n            <input\r\n                    type = \"text\" \r\n                    placeholder = \"Song Name\" \r\n                    value = {info.song_name} \r\n                    name = \"song_name\" \r\n                    className = \"song-input\"\r\n                    onChange = {handleChange}>\r\n                </input>\r\n                <input\r\n                    type = \"text\" \r\n                    placeholder = \"Artist Name\" \r\n                    value = {info.artist_name} \r\n                    name = \"artist_name\" \r\n                    className = \"song-input\"\r\n                    onChange = {handleChange}>\r\n                </input>\r\n                <input\r\n                    type = \"text\" \r\n                    placeholder = \"Short Description\" \r\n                    value = {info.genre} \r\n                    name = \"genre\" \r\n                    className = \"song-input\"\r\n                    onChange = {handleChange}>\r\n                </input>\r\n                <input\r\n                    type = \"number\" \r\n                    placeholder = \"Year of Release\" \r\n                    value = {info.year_of_release} \r\n                    name = \"year_of_release\" \r\n                    className = \"song-input\"\r\n                    onChange = {handleChange}>\r\n                </input>\r\n                <input\r\n                    type = \"text\" \r\n                    placeholder = \"Duration in Format: 00:00\" \r\n                    value = {info.duration_of_song} \r\n                    name = \"duration_of_song\" \r\n                    className = \"song-input\"\r\n                    onChange = {handleChange}>\r\n                </input>\r\n                <button className = \"song-button\">Update</button>\r\n            </form>\r\n            <p className = \"error-msg\">{isError ? errorMessage : null}</p>\r\n            <p className = \"error-msg\">{errorMessage == undefined ? \"Please enter an Artist Name\" : null}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongUpdate\r\n\r\n\r\n// after we add the song, the add song form does not dissapear\r\n// duration_of_song ranking does not work - should we remove it?\r\n//song details ","import React, { useState } from 'react';\r\nimport  axios from \"axios\";\r\n\r\nfunction SongDelete( { songID , setRightColumn } ) {\r\n\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    const handleClickYes = () => {\r\n        axios.delete(`https://musicapp-y9w8.onrender.com/api/songs/${songID}/`)\r\n            .then(res => {\r\n                setIsError(false);\r\n                setRightColumn(\"Welcome!\");\r\n            })       \r\n            .catch(err =>{\r\n                setIsError(true);\r\n                setErrorMessage(err.response.data.song_name);\r\n            });            \r\n    }\r\n\r\n    const handleClickNo = () => {\r\n        setRightColumn(\"Welcome!\");\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className = \"are-you-sure\">\r\n                <p>Are you sure you want to delete this song?</p>\r\n                <button className = \"delete-yes\" onClick = {handleClickYes} >Yes</button>\r\n                <button className = \"delete-no\" onClick = {handleClickNo} >No</button>\r\n            </div>\r\n            <p className = \"error-msg\">{isError ? errorMessage : null}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongDelete\r\n","import React from 'react'\r\n\r\nfunction Welcome() {\r\n    return (\r\n        <div className = \"welcome-msg\">\r\n            <h1>Welcome to our Song Rating Site!</h1>\r\n            <h2>Let me run you through the functionality of our app!</h2>\r\n            <p>You can add any song to our database through the 'Add a New Song' button.</p>\r\n            <p>You can Update any song, and any field you leave blank in the update form will retain its original value.</p>\r\n            <p>If you find you don't like any of the songs, you can delete them using the delete button.</p>\r\n            <p>We believe in a different type of democracy here. If one person wants a song to be deleted, they can delete it\r\n                without any need for any authority or authorization. </p>\r\n            <p>If you click on the song name, our app will display the details of that song, including its\r\n                last rating (Yes, last rating! We don't believe in averages!). Using the add rating field, you can add your rating.\r\n            </p>\r\n            <p>Using our Search Bar, you can search for songs through either the Song name or the Artist name.</p>\r\n            <p>You can also sort the list of songs by song name, rating and the year of release.</p>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Welcome\r\n","import './App.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport AddSongForm from './components/AddSongForm';\r\nimport SongList from './components/SongList';\r\nimport SongDetail from './components/SongDetail';\r\nimport SongUpdate from './components/SongUpdate';\r\nimport SongDelete from './components/SongDelete';\r\nimport Welcome from './components/Welcome';\r\n\r\nfunction App() {\r\n  const [addSong,setAddSong] = useState(false); // boolean that reverses value when add song button is clicked\r\n  const [songAdded,setSongAdded] = useState(false);\r\n  const [songID, setSongID] = useState(0);\r\n  const [rightColumn, setRightColumn] = useState(\"Welcome!\");\r\n  const [hideForm,setHideForm] = useState(true);\r\n\r\n\r\n  const handleClickSong = () => {\r\n    setAddSong(!addSong);\r\n    setHideForm(false);\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className = \"song-rater\">\r\n      <h1 className = \"heading\">Song Rater</h1>\r\n      <div className = \"flex-container\">\r\n        <div className = \"flex-item\">\r\n          <div className = \"add-song-button\">\r\n            <button className = \"add-song-button1\" onClick = {handleClickSong}>Add a new song</button>\r\n          </div>\r\n\r\n          {/*ensures that form is displayed when the button is clicked and hides when clicked again, or submitted*/}\r\n          {addSong && !hideForm ? <AddSongForm setSongAdded={setSongAdded} songAdded = {songAdded} \r\n                      setHideForm = {setHideForm} setAddSong = {setAddSong}/> : null} \r\n          <SongList songAdded={songAdded} setSongAdded={setSongAdded} setRightColumn = {setRightColumn} \r\n                  setSongID = {setSongID} rightColumn = {rightColumn}/>\r\n        </div>\r\n        <div className = \"flex-item\">\r\n          {rightColumn == \"Welcome!\" ? <Welcome /> : null}\r\n          {rightColumn == \"song_details\" ? <SongDetail songID = {songID} /> : null}\r\n          {rightColumn == \"song_update\" ? <SongUpdate songID = {songID} setRightColumn = {setRightColumn} /> : null}\r\n          {rightColumn == \"song_delete\" ? <SongDelete songID = {songID} setRightColumn = {setRightColumn} /> : null}\r\n        </div>   \r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}